% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enq_arrange.R
\name{enq_arrange}
\alias{enq_arrange}
\alias{arrange_total}
\alias{add_total}
\title{Arrange a data frame based on count, option, or total}
\usage{
enq_arrange(df, key = c("n", "option", "total", "default"))

arrange_total(df)

add_total(df)
}
\arguments{
\item{df}{A dataframe to be arranged.}

\item{key}{A character vector specifying the arrangement key.
Possible values include:
\itemize{
\item "n": arrange by descending count ("n").
\item "option": arrange by the first column (assumed to be option).
\item "total": arrange by a total column (assumed to "total") in descending order
(requires the data frame to already have a "total" column).
\item "default": arrange by descending count ("n") if the first column name does not
contain "_ord", otherwise arrange by the first column.
}}
}
\value{
A dataframe.
}
\description{
This function arranges a data frame
by count, option, or total, depending on the specified key.
It uses \code{dplyr::arrange()} for arranging the data.
The default arrangement is by descending count ("n").
}
\examples{
enq_simple(dummy_data, "q1") |>
  print() |>
  enq_arrange(key = "option")
enq_simple(dummy_data, "q2_ord") |>
  print() |>
  enq_arrange(key = "n")
enq_cross(dummy_data, "q1", "q3_multi") |>
  print() |>
  enq_arrange(key = "total")

}
