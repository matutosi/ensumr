% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enq_cross.R
\name{enq_cross}
\alias{enq_cross}
\alias{enq_cross_split}
\title{Create a cross tabulation of counts for two character columns}
\usage{
enq_cross(df, col_1, col_2, delim = ";", arrange_total = TRUE)

enq_cross_split(df, col_1, col_2, split = NULL, delim = ";")
}
\arguments{
\item{df}{A dataframe containing the columns to be used
for the cross tabulation.}

\item{col_1, col_2, split}{A string for the name of the character column to be used
in the cross tabulation.}

\item{delim}{A string to be used for delimiter of values
in the column (default is ";").}

\item{arrange_total}{A logical value indicating whether to add a total.
Defaults to TRUE.}
}
\value{
A data frame with the cross tabulation of counts.
The first column contains the unique values from the col_1.
The remaining columns are named based on the col_2 column values
prefixed with "col_".
Each cell contains the count of the corresponding combination of
values from col_1 and col_2.
An optional total are added if \code{arrange_total} is TRUE.
}
\description{
This function creates a cross tabulation of counts
for two character columns in a data frame.
It uses \code{tidyr::separate_longer_delim()} to split the columns if necessary,
\code{dplyr::count()} to count the occurrences of each combination of unique
values, and \code{tidyr::pivot_wider()} to reshape the data into a cross
tabulation.
The output is arranged by the values in the col_1 by default.
An optional total can be added using the \code{arrange_total()} argument.
}
\examples{
enq_cross(dummy_data, "q1", "q2_ord")
enq_cross(dummy_data, "q1", "q3_multi")
enq_cross(dummy_data, "q2_ord", "q3_multi", arrange_total = FALSE)
enq_cross_split(dummy_data, "q1", "q2_ord", "q3_multi")

}
